#pragma once

//Init cheat code
#define IO_INIT_CHEAT_DATA				CTL_CODE(FILE_DEVICE_UNKNOWN, 0x2000, METHOD_BUFFERED, FILE_SPECIAL_ACCESS)
#define IO_UPDATE_CHEAT_DATA			CTL_CODE(FILE_DEVICE_UNKNOWN, 0x2001, METHOD_BUFFERED, FILE_SPECIAL_ACCESS)
#define IO_GET_MODULE					CTL_CODE(FILE_DEVICE_UNKNOWN, 0x2002, METHOD_BUFFERED, FILE_SPECIAL_ACCESS)
#define IO_GET_MODULE_32				CTL_CODE(FILE_DEVICE_UNKNOWN, 0x2003, METHOD_BUFFERED, FILE_SPECIAL_ACCESS)

//Cheat Memory access
#define IO_READ_PROCESS_MEMORY			CTL_CODE(FILE_DEVICE_UNKNOWN, 0x2004, METHOD_BUFFERED, FILE_SPECIAL_ACCESS)
#define IO_WRITE_PROCESS_MEMORY			CTL_CODE(FILE_DEVICE_UNKNOWN, 0x2005, METHOD_BUFFERED, FILE_SPECIAL_ACCESS)
#define IO_READ_PROCESS_MEMORY_32		CTL_CODE(FILE_DEVICE_UNKNOWN, 0x2006, METHOD_BUFFERED, FILE_SPECIAL_ACCESS)
#define IO_WRITE_PROCESS_MEMORY_32		CTL_CODE(FILE_DEVICE_UNKNOWN, 0x2007, METHOD_BUFFERED, FILE_SPECIAL_ACCESS)
#define IO_INJECT_DLL					CTL_CODE(FILE_DEVICE_UNKNOWN, 0x2008, METHOD_BUFFERED, FILE_SPECIAL_ACCESS)
#define IO_INJECT_DLL_32				CTL_CODE(FILE_DEVICE_UNKNOWN, 0x2009, METHOD_BUFFERED, FILE_SPECIAL_ACCESS)


typedef struct _KERNEL_INIT_DATA_REQUEST
{
	DWORD64 CsgoId;
	DWORD64 CheatId;
	NTSTATUS Result;
} KERNEL_INIT_DATA_REQUEST, *PKERNEL_INIT_DATA_REQUEST;

typedef struct _KERNEL_READ_REQUEST
{
	DWORD64 Address;
	DWORD64 Response;
	SIZE_T Size;
	NTSTATUS Result;
} KERNEL_READ_REQUEST, *PKERNEL_READ_REQUEST;

typedef struct _KERNEL_WRITE_REQUEST
{
	DWORD64 Address;
	DWORD64 Value;
	SIZE_T Size;
	NTSTATUS Result;
} KERNEL_WRITE_REQUEST, *PKERNEL_WRITE_REQUEST;

typedef struct _KERNEL_READ_REQUEST32
{
	DWORD32 Address;
	DWORD64 Response;
	SIZE_T Size;
	NTSTATUS Result;
} KERNEL_READ_REQUEST32, *PKERNEL_READ_REQUEST32;

typedef struct _KERNEL_WRITE_REQUEST32
{
	DWORD32 Address;
	DWORD64 Value;
	SIZE_T Size;
	NTSTATUS Result;
} KERNEL_WRITE_REQUEST32, *PKERNEL_WRITE_REQUEST32;


typedef struct _KERNEL_GET_MODULE
{
	LPCSTR ModuleName;
	SIZE_T NameLength;
	DWORD64 ImageBase;
	DWORD64 ImageSize;
} KERNEL_GET_MODULE, *PKERNEL_GET_MODULE;

typedef struct _KERNEL_GET_MODULE32
{
	LPCSTR ModuleName;
	SIZE_T NameLength;
	DWORD32 ImageBase;
	DWORD64 ImageSize;
} KERNEL_GET_MODULE32, *PKERNEL_GET_MODULE32;